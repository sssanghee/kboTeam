package com.kbo.project.user.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.Lock;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.kbo.project.user.dto.UserInfo;
import com.kbo.project.user.repository.UserRepository;

import jakarta.persistence.LockModeType;
import lombok.RequiredArgsConstructor;


@Service
public class UserService {
	
	@Autowired
	UserRepository userRepository;
	
	@Autowired
    PasswordEncoder passwordEncoder;

	public boolean existIdCheck(String id) {
		boolean existId = userRepository.existsById(id);
		return existId;
	}
	
    public void userSignUp(UserInfo userParam) {
        UserInfo user = new UserInfo();
        
        user.setUserId(userParam.getUserId());
        user.setUserName(userParam.getUserName());
        user.setPassword(passwordEncoder.encode(userParam.getPassword()));
        user.setMateStat("1");
        
		userRepository.save(user);
    }
}
